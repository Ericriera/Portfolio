---
import { Icon } from "astro-icon/components";
import TimelineDialog from "./TimelineDialog.astro";
const { item, index } = Astro.props;
---

<timeline-card data-index={index}>
  <article
    class={`relative mb-10 pl-7 ${
      index % 2 === 0 ? "md:pl-0 md:pr-8" : "md:pl-8 md:ml-auto"
    }`}
  >
    <div
      class="absolute w-10 h-10 rounded-full bg-white border-4 border-white md:left-1/2 top-1/2 -translate-x-12 md:-translate-x-1/2 -translate-y-1/2 flex justify-center items-center"
    >
      <img
        src={`src/assets/${item.data.icon}.png`}
        alt={item.data.icon}
      />
    </div>

    <div
      class={`bg-neutral-800/40 backdrop-blur-md border border-white/10 rounded-xl p-4 shadow-md ${
        index % 2 === 0 ? "md:w-5/12 md:ml-auto" : "md:w-5/12 md:mr-auto"
      }`}
    >
      <span class="block text-sm text-gray-400 font-semibold text-right">
        {item.data.startDate} - {item.data.endDate ?? "Present"}
      </span>
      <h3 class="text-lg font-medium m-0">{item.data.position}</h3>
      <h4 class="text-base text-gray-300 font-normal m-0 mb-2">
        {item.data.company}
      </h4>

      <div class="flex justify-end">
        <button
          id={`open-dialog-${index}`}
          class="flex items-center p-3 bg-cornflower text-white rounded-lg hover:bg-cornflower/90 transition-all duration-300 cursor-pointer"
        >
          <Icon name="fa6-solid:circle-info" size="16" class="text-white" />
        </button>
      </div>
    </div>
  </article>
  <TimelineDialog item={item} index={index} />
</timeline-card>

<script>
  class TimelineCard extends HTMLElement {
    connectedCallback() {
      const index = this.dataset.index;
      const dialog = this.querySelector(`#dialog-${index}`);
      const showButton = this.querySelector(`#open-dialog-${index}`);
      const closeButton = this.querySelector(`#close-dialog-${index}`);

      showButton.addEventListener("click", () => {
        dialog.showModal();
      });

      closeButton.addEventListener("click", () => {
        dialog.close();
      });
    }
  }

  customElements.define("timeline-card", TimelineCard);
</script>
